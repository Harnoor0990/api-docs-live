{
  "openapi": "3.0.0",
  "info": {
    "title": "Task Management API Documentation",
    "version": "1.0.0",
    "description": "This is the API documentation for the Task Management Application."
  },
  "paths": {
    "/api/v1/branches": {
      "post": {
        "summary": "Create a new branch",
        "tags": ["Branches"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Branch created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "summary": "Get a list of branches",
        "tags": ["Branches"],
        "responses": {
          "200": {
            "description": "A list of branches",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branches/{id}": {
      "get": {
        "summary": "Get a branch by ID",
        "tags": ["Branches"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Branch retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found"
          }
        }
      },
      "put": {
        "summary": "Update an existing branch",
        "tags": ["Branches"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Branch updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Branch not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a branch",
        "tags": ["Branches"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Branch deleted successfully"
          },
          "404": {
            "description": "Branch not found"
          }
        }
      }
    },
    "/api/v1/employees": {
      "get": {
        "summary": "Retrieve all employees",
        "tags": ["Employees"],
        "responses": {
          "200": {
            "description": "Successful operation. Returns an array of employee objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "post": {
        "summary": "Create a new employee",
        "tags": ["Employees"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created successfully."
          },
          "400": {
            "description": "Bad request. Invalid input data."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v1/employees/{id}": {
      "get": {
        "summary": "Retrieve a single employee by ID",
        "tags": ["Employees"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the employee to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation. Returns the employee object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "put": {
        "summary": "Update an existing employee",
        "tags": ["Employees"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the employee to update."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully."
          },
          "400": {
            "description": "Bad request. Invalid input data."
          },
          "404": {
            "description": "Employee not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "delete": {
        "summary": "Delete an employee",
        "tags": ["Employees"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the employee to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Employee deleted successfully."
          },
          "404": {
            "description": "Employee not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Branch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier for the branch"
          },
          "name": {
            "type": "string",
            "description": "The name of the branch"
          },
          "address": {
            "type": "string",
            "description": "The address of the branch"
          },
          "phone": {
            "type": "string",
            "description": "The phone number of the branch"
          }
        }
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier for an employee"
          },
          "name": {
            "type": "string",
            "description": "The name of the employee"
          },
          "position": {
            "type": "string",
            "description": "The position or job title of the employee"
          },
          "department": {
            "type": "string",
            "description": "The department the employee works in"
          },
          "email": {
            "type": "string",
            "description": "The email address of the employee"
          },
          "phone": {
            "type": "string",
            "description": "The phone number of the employee"
          },
          "branchId": {
            "type": "number",
            "description": "The unique identifier for the branch the employee is assigned to"
          },
          "salary": {
            "type": "number",
            "description": "The salary of the employee"
          }
        }
      }
    }
  },
  "tags": []
}
